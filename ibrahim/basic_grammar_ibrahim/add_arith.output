Terminaux inutilisés dans la grammaire

   LET
   REC
   IN
   WHERE


Grammaire

    0 $accept: expression $end

    1 expression: arbre
    2           | ARITH_EXPR

    3 arbre: balise chaine CLOSE

    4 chaine: chaine intermediaire
    5       | %empty

    6 intermediaire: EMPTY_NODE
    7              | texte
    8              | arbre
    9              | IDEN

   10 texte: TEXT

   11 balise: TAG
   12       | TAG suite_cle_valeur

   13 suite_cle_valeur: suite_cle_valeur KEY VALUE
   14                 | KEY VALUE


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
KEY (258) 13 14
VALUE (259) 13 14
TAG (260) 11 12
CLOSE (261) 3
TEXT (262) 10
EMPTY_NODE (263) 6
ARITH_EXPR (264) 2
LET (265)
IDEN (266) 9
REC (267)
IN (268)
WHERE (269)


Non-terminaux, suivis des règles où ils apparaissent

$accept (15)
    à gauche: 0
expression (16)
    à gauche: 1 2, à droite: 0
arbre (17)
    à gauche: 3, à droite: 1 8
chaine (18)
    à gauche: 4 5, à droite: 3 4
intermediaire (19)
    à gauche: 6 7 8 9, à droite: 4
texte (20)
    à gauche: 10, à droite: 7
balise (21)
    à gauche: 11 12, à droite: 3
suite_cle_valeur (22)
    à gauche: 13 14, à droite: 12 13


État 0

    0 $accept: . expression $end

    TAG         décalage et aller à l'état 1
    ARITH_EXPR  décalage et aller à l'état 2

    expression  aller à l'état 3
    arbre       aller à l'état 4
    balise      aller à l'état 5


État 1

   11 balise: TAG .
   12       | TAG . suite_cle_valeur

    KEY  décalage et aller à l'état 6

    $défaut  réduction par utilisation de la règle 11 (balise)

    suite_cle_valeur  aller à l'état 7


État 2

    2 expression: ARITH_EXPR .

    $défaut  réduction par utilisation de la règle 2 (expression)


État 3

    0 $accept: expression . $end

    $end  décalage et aller à l'état 8


État 4

    1 expression: arbre .

    $défaut  réduction par utilisation de la règle 1 (expression)


État 5

    3 arbre: balise . chaine CLOSE

    $défaut  réduction par utilisation de la règle 5 (chaine)

    chaine  aller à l'état 9


État 6

   14 suite_cle_valeur: KEY . VALUE

    VALUE  décalage et aller à l'état 10


État 7

   12 balise: TAG suite_cle_valeur .
   13 suite_cle_valeur: suite_cle_valeur . KEY VALUE

    KEY  décalage et aller à l'état 11

    $défaut  réduction par utilisation de la règle 12 (balise)


État 8

    0 $accept: expression $end .

    $défaut  accepter


État 9

    3 arbre: balise chaine . CLOSE
    4 chaine: chaine . intermediaire

    TAG         décalage et aller à l'état 1
    CLOSE       décalage et aller à l'état 12
    TEXT        décalage et aller à l'état 13
    EMPTY_NODE  décalage et aller à l'état 14
    IDEN        décalage et aller à l'état 15

    arbre          aller à l'état 16
    intermediaire  aller à l'état 17
    texte          aller à l'état 18
    balise         aller à l'état 5


État 10

   14 suite_cle_valeur: KEY VALUE .

    $défaut  réduction par utilisation de la règle 14 (suite_cle_valeur)


État 11

   13 suite_cle_valeur: suite_cle_valeur KEY . VALUE

    VALUE  décalage et aller à l'état 19


État 12

    3 arbre: balise chaine CLOSE .

    $défaut  réduction par utilisation de la règle 3 (arbre)


État 13

   10 texte: TEXT .

    $défaut  réduction par utilisation de la règle 10 (texte)


État 14

    6 intermediaire: EMPTY_NODE .

    $défaut  réduction par utilisation de la règle 6 (intermediaire)


État 15

    9 intermediaire: IDEN .

    $défaut  réduction par utilisation de la règle 9 (intermediaire)


État 16

    8 intermediaire: arbre .

    $défaut  réduction par utilisation de la règle 8 (intermediaire)


État 17

    4 chaine: chaine intermediaire .

    $défaut  réduction par utilisation de la règle 4 (chaine)


État 18

    7 intermediaire: texte .

    $défaut  réduction par utilisation de la règle 7 (intermediaire)


État 19

   13 suite_cle_valeur: suite_cle_valeur KEY VALUE .

    $défaut  réduction par utilisation de la règle 13 (suite_cle_valeur)
