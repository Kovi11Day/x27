Terminals which are not used

   ARITH_EXPR
   LET
   REC
   IN
   WHERE


State 5 conflicts: 2 shift/reduce
State 15 conflicts: 2 reduce/reduce


Grammar

    0 $accept: e $end

    1 e: p
    2  | e p

    3 p: OPEN p CLOSE
    4  | suite_inter_foret

    5 suite_inter_foret: suite_inter_foret interieure_foret
    6                  | interieure_foret

    7 interieure_foret: foret_simple
    8                 | arbre

    9 foret_simple: OPEN suite_arbres CLOSE
   10             | OPEN CLOSE

   11 suite_arbres: suite_arbres arbre
   12             | arbre

   13 arbre: balise chaine CLOSE

   14 chaine: chaine intermediaire
   15       | /* empty */

   16 intermediaire: EMPTY_NODE
   17              | texte
   18              | arbre
   19              | IDEN

   20 texte: TEXT

   21 balise: TAG
   22       | TAG suite_cle_valeur

   23 suite_cle_valeur: suite_cle_valeur KEY VALUE
   24                 | KEY VALUE


Terminals, with rules where they appear

$end (0) 0
error (256)
KEY (258) 23 24
VALUE (259) 23 24
TAG (260) 21 22
OPEN (261) 3 9 10
CLOSE (262) 3 9 10 13
TEXT (263) 20
EMPTY_NODE (264) 16
ARITH_EXPR (265)
LET (266)
IDEN (267) 19
REC (268)
IN (269)
WHERE (270)


Nonterminals, with rules where they appear

$accept (16)
    on left: 0
e (17)
    on left: 1 2, on right: 0 2
p (18)
    on left: 3 4, on right: 1 2 3
suite_inter_foret (19)
    on left: 5 6, on right: 4 5
interieure_foret (20)
    on left: 7 8, on right: 5 6
foret_simple (21)
    on left: 9 10, on right: 7
suite_arbres (22)
    on left: 11 12, on right: 9 11
arbre (23)
    on left: 13, on right: 8 11 12 18
chaine (24)
    on left: 14 15, on right: 13 14
intermediaire (25)
    on left: 16 17 18 19, on right: 14
texte (26)
    on left: 20, on right: 17
balise (27)
    on left: 21 22, on right: 13
suite_cle_valeur (28)
    on left: 23 24, on right: 22 23


state 0

    0 $accept: . e $end

    TAG   shift, and go to state 1
    OPEN  shift, and go to state 2

    e                  go to state 3
    p                  go to state 4
    suite_inter_foret  go to state 5
    interieure_foret   go to state 6
    foret_simple       go to state 7
    arbre              go to state 8
    balise             go to state 9


state 1

   21 balise: TAG .
   22       | TAG . suite_cle_valeur

    KEY  shift, and go to state 10

    $default  reduce using rule 21 (balise)

    suite_cle_valeur  go to state 11


state 2

    3 p: OPEN . p CLOSE
    9 foret_simple: OPEN . suite_arbres CLOSE
   10             | OPEN . CLOSE

    TAG    shift, and go to state 1
    OPEN   shift, and go to state 2
    CLOSE  shift, and go to state 12

    p                  go to state 13
    suite_inter_foret  go to state 5
    interieure_foret   go to state 6
    foret_simple       go to state 7
    suite_arbres       go to state 14
    arbre              go to state 15
    balise             go to state 9


state 3

    0 $accept: e . $end
    2 e: e . p

    $end  shift, and go to state 16
    TAG   shift, and go to state 1
    OPEN  shift, and go to state 2

    p                  go to state 17
    suite_inter_foret  go to state 5
    interieure_foret   go to state 6
    foret_simple       go to state 7
    arbre              go to state 8
    balise             go to state 9


state 4

    1 e: p .

    $default  reduce using rule 1 (e)


state 5

    4 p: suite_inter_foret .
    5 suite_inter_foret: suite_inter_foret . interieure_foret

    TAG   shift, and go to state 1
    OPEN  shift, and go to state 18

    TAG       [reduce using rule 4 (p)]
    OPEN      [reduce using rule 4 (p)]
    $default  reduce using rule 4 (p)

    interieure_foret  go to state 19
    foret_simple      go to state 7
    arbre             go to state 8
    balise            go to state 9


state 6

    6 suite_inter_foret: interieure_foret .

    $default  reduce using rule 6 (suite_inter_foret)


state 7

    7 interieure_foret: foret_simple .

    $default  reduce using rule 7 (interieure_foret)


state 8

    8 interieure_foret: arbre .

    $default  reduce using rule 8 (interieure_foret)


state 9

   13 arbre: balise . chaine CLOSE

    $default  reduce using rule 15 (chaine)

    chaine  go to state 20


state 10

   24 suite_cle_valeur: KEY . VALUE

    VALUE  shift, and go to state 21


state 11

   22 balise: TAG suite_cle_valeur .
   23 suite_cle_valeur: suite_cle_valeur . KEY VALUE

    KEY  shift, and go to state 22

    $default  reduce using rule 22 (balise)


state 12

   10 foret_simple: OPEN CLOSE .

    $default  reduce using rule 10 (foret_simple)


state 13

    3 p: OPEN p . CLOSE

    CLOSE  shift, and go to state 23


state 14

    9 foret_simple: OPEN suite_arbres . CLOSE
   11 suite_arbres: suite_arbres . arbre

    TAG    shift, and go to state 1
    CLOSE  shift, and go to state 24

    arbre   go to state 25
    balise  go to state 9


state 15

    8 interieure_foret: arbre .
   12 suite_arbres: arbre .

    TAG       reduce using rule 8 (interieure_foret)
    TAG       [reduce using rule 12 (suite_arbres)]
    CLOSE     reduce using rule 8 (interieure_foret)
    CLOSE     [reduce using rule 12 (suite_arbres)]
    $default  reduce using rule 8 (interieure_foret)


state 16

    0 $accept: e $end .

    $default  accept


state 17

    2 e: e p .

    $default  reduce using rule 2 (e)


state 18

    9 foret_simple: OPEN . suite_arbres CLOSE
   10             | OPEN . CLOSE

    TAG    shift, and go to state 1
    CLOSE  shift, and go to state 12

    suite_arbres  go to state 14
    arbre         go to state 26
    balise        go to state 9


state 19

    5 suite_inter_foret: suite_inter_foret interieure_foret .

    $default  reduce using rule 5 (suite_inter_foret)


state 20

   13 arbre: balise chaine . CLOSE
   14 chaine: chaine . intermediaire

    TAG         shift, and go to state 1
    CLOSE       shift, and go to state 27
    TEXT        shift, and go to state 28
    EMPTY_NODE  shift, and go to state 29
    IDEN        shift, and go to state 30

    arbre          go to state 31
    intermediaire  go to state 32
    texte          go to state 33
    balise         go to state 9


state 21

   24 suite_cle_valeur: KEY VALUE .

    $default  reduce using rule 24 (suite_cle_valeur)


state 22

   23 suite_cle_valeur: suite_cle_valeur KEY . VALUE

    VALUE  shift, and go to state 34


state 23

    3 p: OPEN p CLOSE .

    $default  reduce using rule 3 (p)


state 24

    9 foret_simple: OPEN suite_arbres CLOSE .

    $default  reduce using rule 9 (foret_simple)


state 25

   11 suite_arbres: suite_arbres arbre .

    $default  reduce using rule 11 (suite_arbres)


state 26

   12 suite_arbres: arbre .

    $default  reduce using rule 12 (suite_arbres)


state 27

   13 arbre: balise chaine CLOSE .

    $default  reduce using rule 13 (arbre)


state 28

   20 texte: TEXT .

    $default  reduce using rule 20 (texte)


state 29

   16 intermediaire: EMPTY_NODE .

    $default  reduce using rule 16 (intermediaire)


state 30

   19 intermediaire: IDEN .

    $default  reduce using rule 19 (intermediaire)


state 31

   18 intermediaire: arbre .

    $default  reduce using rule 18 (intermediaire)


state 32

   14 chaine: chaine intermediaire .

    $default  reduce using rule 14 (chaine)


state 33

   17 intermediaire: texte .

    $default  reduce using rule 17 (intermediaire)


state 34

   23 suite_cle_valeur: suite_cle_valeur KEY VALUE .

    $default  reduce using rule 23 (suite_cle_valeur)
