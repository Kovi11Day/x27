Terminals which are not used

   LET
   IDEN
   REC


Grammar

    0 $accept: expression $end

    1 expression: arbre
    2           | ARITH_EXPR

    3 arbre: balise chaine CLOSE

    4 chaine: chaine intermediaire
    5       | /* empty */

    6 intermediaire: EMPTY_NODE
    7              | texte
    8              | arbre

    9 texte: TEXT

   10 balise: TAG
   11       | TAG suite_cle_valeur

   12 suite_cle_valeur: suite_cle_valeur KEY VALUE
   13                 | KEY VALUE


Terminals, with rules where they appear

$end (0) 0
error (256)
KEY (258) 12 13
VALUE (259) 12 13
TAG (260) 10 11
CLOSE (261) 3
TEXT (262) 9
EMPTY_NODE (263) 6
ARITH_EXPR (264) 2
LET (265)
IDEN (266)
REC (267)


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
expression (14)
    on left: 1 2, on right: 0
arbre (15)
    on left: 3, on right: 1 8
chaine (16)
    on left: 4 5, on right: 3 4
intermediaire (17)
    on left: 6 7 8, on right: 4
texte (18)
    on left: 9, on right: 7
balise (19)
    on left: 10 11, on right: 3
suite_cle_valeur (20)
    on left: 12 13, on right: 11 12


state 0

    0 $accept: . expression $end

    TAG         shift, and go to state 1
    ARITH_EXPR  shift, and go to state 2

    expression  go to state 3
    arbre       go to state 4
    balise      go to state 5


state 1

   10 balise: TAG .
   11       | TAG . suite_cle_valeur

    KEY  shift, and go to state 6

    $default  reduce using rule 10 (balise)

    suite_cle_valeur  go to state 7


state 2

    2 expression: ARITH_EXPR .

    $default  reduce using rule 2 (expression)


state 3

    0 $accept: expression . $end

    $end  shift, and go to state 8


state 4

    1 expression: arbre .

    $default  reduce using rule 1 (expression)


state 5

    3 arbre: balise . chaine CLOSE

    $default  reduce using rule 5 (chaine)

    chaine  go to state 9


state 6

   13 suite_cle_valeur: KEY . VALUE

    VALUE  shift, and go to state 10


state 7

   11 balise: TAG suite_cle_valeur .
   12 suite_cle_valeur: suite_cle_valeur . KEY VALUE

    KEY  shift, and go to state 11

    $default  reduce using rule 11 (balise)


state 8

    0 $accept: expression $end .

    $default  accept


state 9

    3 arbre: balise chaine . CLOSE
    4 chaine: chaine . intermediaire

    TAG         shift, and go to state 1
    CLOSE       shift, and go to state 12
    TEXT        shift, and go to state 13
    EMPTY_NODE  shift, and go to state 14

    arbre          go to state 15
    intermediaire  go to state 16
    texte          go to state 17
    balise         go to state 5


state 10

   13 suite_cle_valeur: KEY VALUE .

    $default  reduce using rule 13 (suite_cle_valeur)


state 11

   12 suite_cle_valeur: suite_cle_valeur KEY . VALUE

    VALUE  shift, and go to state 18


state 12

    3 arbre: balise chaine CLOSE .

    $default  reduce using rule 3 (arbre)


state 13

    9 texte: TEXT .

    $default  reduce using rule 9 (texte)


state 14

    6 intermediaire: EMPTY_NODE .

    $default  reduce using rule 6 (intermediaire)


state 15

    8 intermediaire: arbre .

    $default  reduce using rule 8 (intermediaire)


state 16

    4 chaine: chaine intermediaire .

    $default  reduce using rule 4 (chaine)


state 17

    7 intermediaire: texte .

    $default  reduce using rule 7 (intermediaire)


state 18

   12 suite_cle_valeur: suite_cle_valeur KEY VALUE .

    $default  reduce using rule 12 (suite_cle_valeur)
